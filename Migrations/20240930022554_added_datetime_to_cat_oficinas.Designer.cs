// <auto-generated />
using System;
using CAEV.PagoLinea.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAEV.PagoLinea.Migrations
{
    [DbContext(typeof(PagoLineaContext))]
    [Migration("20240930022554_added_datetime_to_cat_oficinas")]
    partial class added_datetime_to_cat_oficinas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CAEV.PagoLinea.Models.CatLocalidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("localidad");

                    b.Property<int>("OficinaId")
                        .HasColumnType("int")
                        .HasColumnName("oficinaId");

                    b.HasKey("Id");

                    b.HasIndex("OficinaId");

                    b.ToTable("Cat_Localidades");
                });

            modelBuilder.Entity("CAEV.PagoLinea.Models.CatOficina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actualizable")
                        .HasColumnType("bit")
                        .HasColumnName("actualizable");

                    b.Property<string>("BaseDatos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("baseDatos");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contraseña");

                    b.Property<string>("Oficina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oficina");

                    b.Property<string>("Servidor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("servidor");

                    b.Property<DateTime?>("UltimaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("ultimaActualizacion");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("Cat_Oficinas");
                });

            modelBuilder.Entity("CAEV.PagoLinea.Models.CuentaPadron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("getDate()");

                    b.Property<decimal>("IVA")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)")
                        .HasColumnName("iVA");

                    b.Property<int>("IdCuenta")
                        .HasColumnType("int")
                        .HasColumnName("idCuenta");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int")
                        .HasColumnName("idLocalidad");

                    b.Property<int>("IdPadron")
                        .HasColumnType("int")
                        .HasColumnName("idPadron");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("localidad");

                    b.Property<string>("Localizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("localizacion");

                    b.Property<string>("PeriodoFactura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("periodoFactura");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("razonSocial");

                    b.Property<int>("Sector")
                        .HasColumnType("int")
                        .HasColumnName("sector");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)")
                        .HasColumnName("subtotal");

                    b.Property<decimal>("Total")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)")
                        .HasColumnName("total");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("getDate()");

                    b.HasKey("Id");

                    b.ToTable("CuentasPadron");
                });

            modelBuilder.Entity("CAEV.PagoLinea.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("getDate()");

                    b.HasKey("Id");

                    b.ToTable("SystemUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@email.com",
                            Name = "Administrador",
                            Password = "$2a$11$AfcrCArGfAU.P/haHseq6.3yo40Nrw72/Kmsyn8rsyA0p5ndU0N4y",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CAEV.PagoLinea.Models.CatLocalidad", b =>
                {
                    b.HasOne("CAEV.PagoLinea.Models.CatOficina", "Oficina")
                        .WithMany("Localidades")
                        .HasForeignKey("OficinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oficina");
                });

            modelBuilder.Entity("CAEV.PagoLinea.Models.CatOficina", b =>
                {
                    b.Navigation("Localidades");
                });
#pragma warning restore 612, 618
        }
    }
}
